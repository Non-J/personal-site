---
/**
 * Entry for each blog post
 */

import 'src/styles/font.scss';
import Base from './Base.astro';
import ViewTransitions from 'astro/components/ViewTransitions.astro';
import Main from 'src/layouts/Main.astro';
import NavLink from 'src/components/NavLink.astro';
import ScrollToTop from 'src/components/ScrollToTop.astro';
import ArticleIntro from 'src/components/ArticleIntro.astro';
import type { BlogPostStaticPathType } from 'src/utils/blogStaticPaths';
import { getTranslator } from 'src/i18n/lang';

export interface Props extends BlogPostStaticPathType {}
const { should_render_post, post } = Astro.props;

const { Content, headings } = should_render_post
	? await post.render()
	: { Content: undefined, headings: undefined };
const t = getTranslator(Astro.currentLocale);
---

{
	should_render_post ? (
		<Main title={post.data.title} hasHeader>
			<Fragment slot="head">
				<ScrollToTop />
			</Fragment>

			<Fragment slot="header">
				<NavLink href={t.getRoute('/')} text={t.getText('homepage')} />
				<NavLink
					href={t.getRoute('/blog')}
					text={t.getText('blog/back_to_posts')}
				/>
			</Fragment>

			<ArticleIntro
				title={post.data.title}
				publication_date={post.data.publication_date}
				update_date={post.data.update_date ?? undefined}
				toc={headings?.map((heading) => ({
					text: heading.text,
					depth: heading.depth,
					href: '#' + heading.slug,
				}))}
			/>

			<article>{Content && <Content />}</article>
		</Main>
	) : (
		<Base title={t.getText('blog/name')}>
			<Fragment slot="head">
				<ViewTransitions />
			</Fragment>

			<main>
				<div class="flex min-h-screen flex-col items-center justify-center text-center">
					<h1 class="text-4xl text-neutral-100 text-opacity-90">
						{t.getText('blog/not_found_language')}
					</h1>
					<p class="mt-2 text-lg">
						{t.getText('blog/not_found_language_message', {
							title: post.data.title,
						})}
					</p>
					<NavLink
						className="mt-8 block text-lg"
						text={t.getText('blog/not_found_language_redirect')}
						href={t.getRouteToLocale('blog/' + post.slug)}
					/>
				</div>
			</main>
		</Base>
	)
}
